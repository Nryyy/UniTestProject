@page "/templates/responses/{id:guid}"
@rendermode InteractiveServer

@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject DialogService DialogService

@using HromadaWEB.Models.Entities
@using Radzen

<PageTitle>Відповіді на індикатори</PageTitle>

<div class="container mx-auto p-6">
    <h1 class="text-3xl font-bold text-gray-900 mb-6">Відповіді на індикатори</h1>

    @if (Responses == null)
    {
        <p class="text-gray-500">Завантаження...</p>
    }
    else if (!Responses.Any())
    {
        <p class="text-gray-500">Немає відповідей для цього шаблону.</p>
    }
    else
    {
        <RadzenDataGrid Data="@Responses" TItem="IndicatorAnswers" AllowPaging="true" PageSize="10" AllowSorting="true">
            <Columns>
                <RadzenDataGridColumn TItem="IndicatorAnswers" Property="Indicator.Name" Title="Індикатор" />
                <RadzenDataGridColumn TItem="IndicatorAnswers" Property="Responser.Email" Title="Користувач" />
                <RadzenDataGridColumn TItem="IndicatorAnswers" Title="Відповідь">
                    <Template Context="response">
                        <div class="truncate w-60 inline-block" style="max-width: 250px;">
                            @(response.AnswerText.Length > 30 ? response.AnswerText.Substring(0, 30) + "..." : response.AnswerText)
                        </div>
                        @if (response.AnswerText.Length > 30)
                        {
                            <RadzenButton Text="Показати повністю" Click="() => ShowFullAnswer(response.AnswerText)" Class="ml-2 p-1 text-blue-600 underline" />
                        }
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="IndicatorAnswers" Property="Score" Title="Оцінка" />
                <RadzenDataGridColumn TItem="IndicatorAnswers" Title="Відгук">
                    <Template Context="response">
                        <RadzenButton Text="Залишити відгук" Click="() => LeaveReview(response.Id)" Class="ml-2 p-1 text-green-600 underline" />
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    }
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private List<IndicatorAnswers> Responses = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var allResponses = await Http.GetFromJsonAsync<List<IndicatorAnswers>>("/api/IndicatorAnswers");
            var allIndicators = await Http.GetFromJsonAsync<List<Indicator>>("/api/Indicator");
            var allUsers = await Http.GetFromJsonAsync<List<User>>("/api/Users/all_users");

            if (allResponses == null || allIndicators == null || allUsers == null)
            {
                Responses = new List<IndicatorAnswers>();
                return;
            }

            var indicatorMap = allIndicators.Where(i => i.TemplateId == Id).ToDictionary(i => i.Id);
            var userMap = allUsers.ToDictionary(u => u.Id);

            Responses = allResponses
                .Where(r => indicatorMap.ContainsKey(r.IndicatorId))
                .Select(r => new IndicatorAnswers
                    {
                        Id = r.Id,
                        IndicatorId = r.IndicatorId,
                        ResponserId = r.ResponserId,
                        AnswerText = r.AnswerText,
                        Score = r.Score,
                        Indicator = indicatorMap[r.IndicatorId],
                        Responser = userMap.GetValueOrDefault(r.ResponserId)
                    })
                .ToList();
        }
        catch (Exception ex)
        {
            // Логування помилки або обробка виключення
        }
    }

    private async Task ShowFullAnswer(string answer)
    {
        await DialogService.OpenAsync("Повна відповідь", ds =>
            builder => builder.AddContent(0, (MarkupString)$"<p class='text-gray-800 whitespace-pre-wrap'>{answer}</p>"),
            new DialogOptions { Width = "500px", Height = "auto", CloseDialogOnOverlayClick = true }
        );
    }

    private async Task LeaveReview(Guid answerId)
    {
        await DialogService.OpenAsync<LeaveReviewDialog>("Залишити відгук",
            new Dictionary<string, object> { { "IndicatorAnswerId", answerId } },
            new DialogOptions { Width = "600px", Height = "auto", CloseDialogOnOverlayClick = false });
    }
}
